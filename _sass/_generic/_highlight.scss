// html, sass, markdown, yaml, bash, hbs, css

$highlight-languages: (
  'html': #ff977d,
  'hbs': #fda,
  'markdown': #332d31,
  'css': #053bb9,
  'scss': #bf4080,
  'javascript': #f7df1e,
  'typescript': #007acd,
  'json': #fcf4a3,
  'yaml': #be93d4,
  'ruby': #a91401,
  'bash': #aaa
);

code, pre {
	font-size: 14px;
	line-height: 1.375;
	direction: ltr;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	-moz-tab-size: 2;
	-o-tab-size: 2;
	tab-size: 2;
	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
	background: #272822;
  color: #f8f8f2;
}

:not(pre) > code {
	padding: .1em;
	border-radius: .3em;
}
.token.comment, .token.prolog, .token.doctype, .token.cdata {
	color: #75715e;
}
.token.punctuation {
	color: #f8f8f2;
}
.token.namespace {
	opacity: .7;
}
.token.operator, .token.boolean, .token.number {
	color: #fd971f;
}
.token.property {
	color: #f4bf75;
}
.token.tag {
	color: #66d9ef;
}
.token.string {
	color: #a1efe4;
}
.token.selector {
	color: #ae81ff;
}
.token.attr-name {
	color: #fd971f;
}
.token.entity, .token.url, .language-css .token.string, .style .token.string {
	color: #a1efe4;
}
.token.attr-value, .token.keyword, .token.control, .token.directive, .token.unit {
	color: #a6e22e;
}
.token.statement, .token.regex, .token.atrule {
	color: #a1efe4;
}
.token.placeholder, .token.variable {
	color: #66d9ef;
}
.token.deleted {
	text-decoration: line-through;
}
.token.inserted {
	border-bottom: 1px dotted #f9f8f5;
	text-decoration: none;
}
.token.italic {
	font-style: italic;
}
.token.important, .token.bold {
	font-weight: bold;
}
.token.important {
	color: #f92672;
}
.token.entity {
	cursor: help;
}
pre > code.highlight {
	outline: 0.4em solid #f92672;
	outline-offset: .4em;
}

// All code
code {
  color: color(mono, white);

  background-color: color(mono, black);
}

@include darkMode() {
  code {
    --color-mono-black: #{color(mono, white)};
    --color-mono-white: #{color(mono, black)};
  }
}

// inline code
:not(pre) > code {
  padding: 3px 4px;

  font-size: calc(#{type(font-size, p)} * 0.8);
}

// block code wrapper
pre {
  position: relative;
  margin-right: var(--pre-x-margin);
  margin-bottom: spacing(6);
  margin-left: var(--pre-x-margin);

  border-radius: spacing(2);
  box-shadow: container(box-shadow, 1);

  overflow: hidden;

  // Text
  &::before {
    content: 'Code';
    position: absolute;
    top: 3px;
    left: spacing(4);

    text-transform: uppercase;
    color: color(mono, black);
    font-family: type(font-family, mono);
    font-size: type(font-size, xtiny);
  }

  // Button
  &::after {
    content: '';
    position: absolute;
    top: 5px;
    right: spacing(2);
    width: 8px;
    height: 8px;

    border-radius: 100%;
    background-color: color(primary, dark);
  }
}

// block code
pre code {
  display: block;
  margin: 0;
  padding: spacing(4);
  max-height: rem(500px);

  font-size: type(font-size, small);

  border-top: spacing(4) solid #c5c5d0;

  overflow: scroll;
  max-width: 100%;
}

// Block code for specific languages
@each $language, $color in $highlight-languages {
  $text-color: '';
  $button-bg: '';

  @if (lightness($color) > 50) {
    $text-color: #000;
    $button-bg: color(primary, dark);
  } @else {
    $text-color: #FFF;
    $button-bg: color(primary, light);
  }

  pre.language-#{$language} {
    code.language-#{$language} {
      border-color: $color;
    }

    &::after {
      background-color: $button-bg;
    }

    &::before {
      content: $language;
      color: $text-color;
    }
  }
}
